<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article class="whitepaper">

  <title>LMC release guidelines</title>

  <articleinfo>

    <author>
      <firstname>Cédric</firstname>
      <surname>Delfosse</surname>
      <email>cedric.delfosse@linbox.com</email>
    </author>

    <affiliation>
      <orgname>Linbox / Free &amp; ALter Soft</orgname>
    </affiliation>

    <copyright>
      <year>2006 Cédric Delfosse - Linbox F&amp;AS</year>
    </copyright>

    <revhistory>      
      <revision>
        <revnumber>$Revision$</revnumber>
        <date>$Date$</date>
        <authorinitials>$Author$</authorinitials>
      </revision>
    </revhistory>

    <productname>LDS component this LDSEP applies: LMC agent and LMC web</productname>
    <productnumber>LDS component version this LDSEP applies: 1.x</productnumber>

    <abstract>
      <para>This document explains how to release a new LMC version.</para>
    </abstract>
  </articleinfo>

  <section>

    <title>LMC Release components</title>

    <para>
      What we release are:
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  A tarball called lmc-agent-VERSION.tar.gz. It contains the lmc-agent and all its Python plugins.
	</para>
      </listitem>
      <listitem>
	<para>
	  A tarball called lmc-web-base-VERSION.tar.gz. It contains the base LMC web administration framework and the base LDAP related management functions.
	</para>
      </listitem>
      <listitem>
	<para>
	  A tarball called lmc-web-samba-VERSION.tar.gz. It contains the SAMBA web administration module.
	</para>
      </listitem>
      <listitem>
	<para>
	  A tarball called lmc-web-ox-VERSION.tar.gz. It contains the Open-Xchange web administration module.
	</para>
      </listitem>
      <listitem>
	<para>
	  A tarball called lmc-web-proxy-VERSION.tar.gz. It contains the proxy blacklist (squid/squidguard) administration module.
	</para>
      </listitem>
      <listitem>
	<para>
	  A tarball called lmc-doc-VERSION.tar.gz. It contains all the LMC related documentation.
	</para>
      </listitem>
    </itemizedlist>
      
  </section>

  <section>
    
    <title>Requirements for each component</title>

    <para>
      Beware that lmc-agent requirements must be met before lmc-web-* one.
    </para>

    <section>
      
      <title>Requirements for lmc-agent</title>

      <para>
	Please check the requirements in this order.
      </para>
      <para>
	All the python unit tests runs succesfully.
      </para>
      <para>
	For the agent and each plugin, the VERSION attribute must be updated to the version number we release, in those files: <filename>lmc/agent.py lmc/plugin/base/__init__.py lmc/plugin/samba/__init__.py lmc/plugin/proxy/__init__.py lmc/plugin/ox/__init__.py</filename>.
      </para>
      <para>
	For each plugin, the APIVERSION attribute may be updated. The APIVERSION string is similar to libtool library versions: current:revision:age.
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    current : The most recent interface number that this library implements.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    revision : The most recent interface number that this library implements.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    age : The difference between the newest and oldest interfaces that this library implements. In other words, the library implements all the interface numbers in the range from number current - age to current.
	  </para>
	</listitem>
      </itemizedlist>

      <para>
	Here are a set of rules to update the APIVERSION string:
      </para>
      <orderedlist>
	<listitem>
	  <para>
	    If a Python plugin source code has changed at all since the last release, then increment revision (c:r:a becomes c:r+1:a)
	  </para>
	</listitem>
	<listitem>
	  <para>
	    If any interfaces have been added, removed, or changed since the last release, increment current, and set revision to 0
	  </para>
	</listitem>
	<listitem>
	  <para>
	    If any interfaces have been added since the last release, then increment age
	  </para>
	</listitem>
	<listitem>
	  <para>
	    If any interfaces have been removed since the last public release, then set age to 0.
	  </para>
	</listitem>
      </orderedlist>
    </section>

    <section>
      
      <title>Requirements for lmc-web-* components</title>
      
      <para>
	Please check the requirements in this order.
      </para>
      <para>
	The __version variable variable contained in each infoPackage.inc.php file from each lmc-web-* component must be updated to the version we release.
      </para>
      <para>
	Each lmc-web-* must be able to interact with their corresponding plugin we are going to release. For example, lmc-web-base must be compatible with the base plugin of the lmc-agent. __apiversion variable contained in each infoPackage.inc.php file from each lmc-web-* must be equal to the APIVERSION attribute of the corresponding lmc-agent Python plugin.
      </para>
      <para>
	The web selenium tests are successful with the lmc-agent revision we are going to release and that met the release requirement.
      </para>
      <para>
	The manual tests of the web interface are successful.
      </para>
      
    </section>
    
  </section>

  <section>

    <title>Updating lmc-doc</title>

    <para>
      All the installation/configuration manuals must be updated and checked.
    </para>
    <para>
      The Python API documentation must be regenerated.
    </para>
    <para>
      The PHP API documentation must be regenerated.
    </para>
    
  </section>

  <section>

    <title>Making the release</title>
    
    <section>
      
      <title>Releasing lmc-agent</title>
      
      <para>
      The Changelog file must be updated. If an entry in the changelog is a bugfix of a bug reported in the bug tracking system, the ticket number must be written.
      </para>
      <para>
	The lmc-agent SVN repository is tagged according to the version number of the release. The tag format is LMC_x_y_z. For example, if the version we release is 1.2.3, the tag is LMC_1_2_3.
      </para>
      <para>
	We export the source code from the SVN repository with the tag we just set, to a directory called <filename>lmc-agent-x.y.z</filename>.
      </para>
      <para>
	A tarball called lmc-agent-x.y.z.tar.gz is built from this directory.
      </para>
		
    </section>
    
    <section>
      
      <title>Releasing lmc-web-* components</title>
      
      <para>
      The Changelog file of each component must be updated. If an entry in the changelog is a bugfix of a bug reported in the bug tracking system, the ticket number must be written.
      </para>
      <para>
	All the lmc-web-* SVN repositories are tagged according to the version number of the release. The tag format is LMC_x_y_z. For example, if the version we release is 1.2.3, the tag is LMC_1_2_3.
      </para>
      <para>
	We export the source code from the SVN repositories with the tag we just set, to directories called <filename>lmc-web-*-x.y.z</filename> (for example <filename>lmc-web-base-1.2.3</filename>).
      </para>
      <para>
	Tarballs called lmc-web-*-x.y.z.tar.gz are built from this directory.
      </para>
		
    </section>

    <section>
      
      <title>Releasing lmc-doc</title>
      
      <para>
      The Changelog file must be updated. If an entry in the changelog is a bugfix of a bug reported in the bug tracking system, the ticket number must be written.
      </para>
      <para>
	The lmc-doc SVN repository is tagged according to the version number of the release. The tag format is LMC_x_y_z. For example, if the version we release is 1.2.3, the tag is LMC_1_2_3.
      </para>
      <para>
	We export the source code from the SVN repository with the tag we just set, to a directory called <filename>lmc-doc-x.y.z</filename>.
      </para>
      <para>
	A tarball called lmc-doc-x.y.z.tar.gz is built from this directory.
      </para>

    </section>

  </section>

  <section>
    
    <title>Publishing the release</title>
    
    <para>
      The tarballs are put in the public download place.
    </para>
    <para>
      A mail is sent to the lmc-announce mailing list.
    </para>

  </section>
  
</article>
